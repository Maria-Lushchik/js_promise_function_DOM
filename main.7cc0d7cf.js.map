{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","alert","document","createElement","classList","add","innerText","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAoBJ,GAAAA,OAAAA,GAAa,WACvCE,EACSF,kBAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQM,SAAiBN,UAAAA,OAAAA,EAAQO,GADvE,kBAON,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAQC,SAASC,cAAc,OAErCF,EAAMG,UAAUC,IAAI,WACpBJ,EAAMK,UAAYN,EAClBE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.7cc0d7cf.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(`${eventName}`, () => {\n      resolve(`\n      It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.\n      `);\n    });\n  });\n};\n\nconst printMessage = (message) => {\n  const alert = document.createElement('div');\n  \n  alert.classList.add('message');\n  alert.innerText = message;\n  document.body.appendChild(alert);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}